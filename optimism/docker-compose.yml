version: "3"
networks:
  geth:
    external: true

x-env: &env
  environment:
    - NETWORK_NAME=mainnet

x-logging: &logging
  networks:
    - geth

  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: "3"
  mem_swappiness: 0
  mem_limit: 64000m

services:
  op-dtl:
    image: ethereumoptimism/data-transport-layer:${IMAGE_TAG__DTL:-latest}
    <<: *env
    restart: unless-stopped
    entrypoint: /scripts/dtl-start.sh
    env_file:
      - ./envs/${NETWORK_NAME}/dtl.env
      - .env
    volumes:
      - /data/optimism/dtl:/db
      - ./scripts:/scripts
    ports:
      - ${PORT__DTL:-7878}:7878
    <<: *logging

  op-l2geth:
    image: ethereumoptimism/l2geth:${IMAGE_TAG__L2GETH:-latest}
    container_name: l2geth
    <<: *env
    restart: unless-stopped
    stop_grace_period: 3m
    entrypoint:
      - /bin/sh
      - -c
      - "/scripts/l2geth-init.sh && /scripts/l2geth-start.sh"
    env_file:
      - ./envs/${NETWORK_NAME}/l2geth.env
      - .env
    volumes:
      - /data/optimism/geth:/geth
      - ./scripts:/scripts
    ports:
      - ${PORT__L2GETH_HTTP:-9991}:8545
      - ${PORT__L2GETH_WS:-9992}:8546
    <<: *logging

  op-healthcheck:
    image: ethereumoptimism/replica-healthcheck:${IMAGE_TAG__HEALTHCHECK:-latest}
    <<: *env
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/healthcheck.env
      - .env
    ports:
      - ${PORT__HEALTHCHECK_METRICS:-7300}:7300
    <<: *logging

  op-healthcheck-bedrock:
    image: ethereumoptimism/replica-healthcheck:${IMAGE_TAG__HEALTHCHECK:-latest}
    <<: *env
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/healthcheck-bedrock.env
      - .env
    ports:
      - ${PORT__HEALTHCHECK_BEDROCK_METRICS:-7302}:7300
    <<: *logging

  op-fault-detector:
    image: ethereumoptimism/fault-detector:${IMAGE_TAG__FAULT_DETECTOR:-latest}
    <<: *env
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/fault-detector.env
      - .env
    ports:
      - ${PORT__FAULT_DETECTOR_METRICS:-7301}:7300
    <<: *logging

  fault-detector-bedrock:
    image: ethereumoptimism/fault-detector:${IMAGE_TAG__FAULT_DETECTOR:-latest}
    <<: *env
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/fault-detector-bedrock.env
      - .env
    ports:
      - ${PORT__FAULT_DETECTOR_BEDROCK_METRICS:-7303}:7300
    <<: *logging

  op-geth:
    image: ethereumoptimism/op-geth:v1.10.26-166f27c
    <<: *env
    restart: unless-stopped
    stop_grace_period: 3m
    entrypoint: /scripts/op-geth-start.sh
    env_file:
      - ./envs/${NETWORK_NAME}/op-geth.env
      - .env
    ports:
      - ${PORT__OP_GETH_HTTP:-9993}:8545
      - ${PORT__OP_GETH_WS:-9994}:8546
    volumes:
      - ./scripts:/scripts
      - /data/optimism/shared:/shared
      - /data/optimism/op_geth:/geth
    <<: *logging

  op-node:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v0.10.9
    restart: unless-stopped
    stop_grace_period: 3m
    entrypoint: /scripts/op-node-start.sh
    env_file:
      - .env
    volumes:
      - ./scripts:/scripts
      - /data/optimism/shared:/shared
    <<: *logging

  bedrock-init:
    build:
      context: ./docker/dockerfiles
      dockerfile: Dockerfile.bedrock-init
    entrypoint: /scripts/bedrock-init.sh
    env_file:
      - .env
    volumes:
      - ./scripts:/scripts
      - /data/optimism/shared:/shared
      - /data/optimism/op_geth:/geth
      - /data/optimism/geth:/legacy-geth
      - /data/optimism/torrent_downloads:/downloads
    <<: *logging

  op-prometheus:
    image: prom/prometheus:${IMAGE_TAG__PROMETHEUS:-latest}
    restart: unless-stopped
    container_name: op-prometheus
    env_file:
      - .env
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - /data/optimism/prometheus_data:/prometheus
    ports:
      - ${PORT__PROMETHEUS:-9090}:9090
    <<: *logging

  op-grafana:
    image: grafana/grafana:${IMAGE_TAG__GRAFANA:-9.3.0}
    container_name: op-grafana
    <<: *env
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/grafana.env
    ports:
      - ${PORT__GRAFANA:-3000}:3000
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/:ro
      - ./docker/grafana/dashboards/simple_node_dashboard.json:/var/lib/grafana/dashboards/simple_node_dashboard.json
      - ./docker/grafana/dashboards/simple_node_dashboard.bedrock.json:/var/lib/grafana/dashboards/simple_node_dashboard.bedrock.json
      - /data/optimism/grafana_data:/var/lib/grafana

  op-influxdb:
    image: quay.io/influxdb/influxdb:${IMAGE_TAG__INFLUXDB:-1.6}
    container_name: influxdb
    <<: *env
    networks:
      - geth
    env_file:
      - ./envs/${NETWORK_NAME}/influxdb.env
    ports:
      - ${PORT__INFLUXDB:-8086}:8086
    volumes:
      - /data/optimism/influxdb_data:/var/lib/influxdb

  torrent:
    image: lscr.io/linuxserver/qbittorrent:${IMAGE_TAG__TORRENT:-latest}
    restart: unless-stopped
    environment:
      - PASSWORD=${TORRENT_UI_PASSWORD}
    ports:
      - ${PORT__TORRENT_UI:-8080}:8080
      - ${PORT__TORRENT:-6881}:6881
      - ${PORT__TORRENT:-6881}:6881/udp
    volumes:
      - /data/optimism/torrent_config:/config
      - /data/optimism/torrent_downloads:/downloads
