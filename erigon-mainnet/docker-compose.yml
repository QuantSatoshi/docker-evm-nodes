# Erigon by default is "all in one binary" solution, but it's possible start TxPool as separated processes.
# Same true about: JSON RPC layer (RPCDaemon), p2p layer (Sentry), history download layer (Downloader), consensus.
# Don't start services as separated processes unless you have clear reason for it: resource limiting, scale, replace by your own implementation, security.
# This file is an example: how to start Erigon's services as separated processes.

# Default: --datadir=/home/erigon/.local/share/erigon
# Ports: `9090` execution engine (private api), `9091` sentry, `9092` consensus engine, `9093` snapshot downloader, `9094` TxPool
# Ports: `8565` json rpc, `8571` consensus json rpc, `30323` eth p2p protocol, `42069` bittorrent protocol,

# Connections: erigon -> (sentries, downloader), rpcdaemon -> (erigon, txpool), txpool -> erigon

version: '2.2'

x-common-variables: &common-variables
  XDG_DATA_HOME: /data/erigon

services:
  erigon:
    image: thorax/erigon:stable
    container_name: erigon-mainnet
    stop_grace_period: 3m
    environment: *common-variables
    build:
      args:
        UID: ${DOCKER_UID:-0}
        GID: ${DOCKER_GID:-0}
      context: .
    command: >
      erigon ${ERIGON_FLAGS-} 
      --private.api.addr=0.0.0.0:9090 
      --maxpeers=20 
      --http.port=8545
      --http.addr=0.0.0.0
      --http.vhosts=*
      --http.corsdomain=*
      --authrpc.jwtsecret=/jwtsecret
      --authrpc.port 8551
      --authrpc.addr=0.0.0.0
      --authrpc.vhosts=ethereum
      --ws
      --ws.addr=0.0.0.0
      --ws.origins=*
      --http.api=eth,web3,debug,txpool
    volumes:
      - /data/erigon:/data/erigon
    restart: unless-stopped
    mem_swappiness: 0
    mem_limit: 96000m
    user: ${DOCKER_UID:-0}:${DOCKER_GID:-0}
    ports:
      - 8571:8551
      - 30323:30303
      - 42069:42069
      - 8645:8545
      - 9090:9090
